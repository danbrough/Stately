
// TODO tie this into the normal gradle-mvn-push script
apply plugin: 'maven-publish'
apply plugin: 'signing'

def isReleaseBuild() {
  return VERSION_NAME.contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
  return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL :
      "https://s01.oss.sonatype.org/service/local/staging/deployByRepositoryId/${System.getenv("SONATYPE_REPO_ID")}"
}

def getSnapshotRepositoryUrl() {
  return "https://s01.oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
  return System.getenv("SONATYPE_USER")
}

def getRepositoryPassword() {
  return System.getenv("SONATYPE_PASSWORD")
}

task emptySourcesJar(type: Jar) {
  classifier = 'sources'
}
task emptyJavadocJar(type: Jar) {
  classifier = 'javadoc'
}

def getGpgKey() {
  return hasProperty('SIGNING_KEY') ? SIGNING_KEY : ""
}

signing {
  required { hasProperty("signPublications") }
  sign(publishing.publications)
}

publishing {
  publications.all {
    artifact emptyJavadocJar

    pom.withXml {
      def root = asNode()

      root.children().last() + {
        resolveStrategy = Closure.DELEGATE_FIRST

        description POM_DESCRIPTION
        name POM_NAME
        url POM_URL
        licenses {
          license {
            name POM_LICENCE_NAME
            url POM_LICENCE_URL
            distribution POM_LICENCE_DIST
          }
        }
        scm {
          url POM_SCM_URL
          connection POM_SCM_CONNECTION
          developerConnection POM_SCM_DEV_CONNECTION
        }
        developers {
          developer {
            id POM_DEVELOPER_ID
            name POM_DEVELOPER_NAME
          }
        }
      }
    }
  }

  repositories {
    maven {
      name = "M2"
      url = "/usr/local/kotlinxtras/build/m2"
    }
    maven {
      name = "SonaType"
      url isReleaseBuild() ? getReleaseRepositoryUrl() : getSnapshotRepositoryUrl()
      credentials {
        username getRepositoryUsername()
        password getRepositoryPassword()
      }
    }
    maven {
      name 'test'
      url "file://${rootProject.buildDir}/localMaven"
    }
  }
}

